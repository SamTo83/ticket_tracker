{"version":3,"sources":["components/Button/Button.jsx","components/Counter/Counter.jsx","components/Employee/Employee.jsx","components/Header/Header.jsx","data/team.js","App.jsx","reportWebVitals.js","index.js"],"names":["Button","buttonText","buttonStyles","isSecondary","className","Counter","useState","counter","setCounter","onClick","Employee","props","name","role","Header","team","id","App","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAkBeA,EAfA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAEXC,EAAe,SAQnB,OALEA,IADkB,IAJyB,EAAlBC,YAKT,qBAEA,mBAIhB,wBAAQC,UAAWF,EAAnB,SAAkCD,KCsBvBI,EA/BC,WACd,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACE,sBAAKJ,UAAU,oBAAf,UACE,oBAAIA,UAAU,UAAd,qBACA,sBAAMA,UAAU,SAAhB,SAA0BG,IACxB,sBAAKH,UAAU,mBAAf,UACE,qBAAKK,QAXW,WACjBF,EAAU,GACbC,EAAWD,EAAS,IAShB,SACA,cAAC,EAAD,CAAQH,UAAU,MAAMH,WAAW,IAAIE,aAAa,MAEpD,qBAAKM,QAlBW,WACtBD,EAAWD,EAAS,IAiBd,SACA,cAAC,EAAD,CAAQH,UAAU,MAAMH,WAAW,IAAIE,aAAa,aCP/CO,EAhBE,SAACC,GAChB,IAAOC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KAEb,OACE,sBAAKT,UAAU,iBAAf,UACE,wCAAWQ,KACX,wCAAWC,KACX,qBAAKT,UAAU,WAAf,SACE,cAAC,EAAD,UCDOU,G,MARA,WACb,OACE,wBAAQV,UAAU,SAAlB,SACE,oBAAIA,UAAU,QAAd,gCC8CSW,EApDF,CACX,CACEC,GAAI,EACJJ,KAAM,eACNC,KAAM,6BAER,CACEG,GAAI,EACJJ,KAAM,iBACNC,KAAM,6BAER,CACEG,GAAI,EACJJ,KAAM,eACNC,KAAM,6BAER,CACEG,GAAI,EACJJ,KAAM,gBACNC,KAAM,sBAER,CACEG,GAAI,EACJJ,KAAM,gBACNC,KAAM,sBAER,CACEG,GAAI,EACJJ,KAAM,aACNC,KAAM,6BAER,CACEG,GAAI,EACJJ,KAAM,kBACNC,KAAM,mBAER,CACEG,GAAI,EACJJ,KAAM,aACNC,KAAM,UAER,CACEG,GAAI,EACJJ,KAAM,gBACNC,KAAM,UAER,CACEG,GAAI,GACJJ,KAAM,mBACNC,KAAM,aCxBKI,EAnBH,WAEV,OACE,gCACE,qBAAKb,UAAU,SAAf,SACE,cAAC,EAAD,MAEA,yBAASA,UAAU,iBAAnB,SACE,qBAAKA,UAAU,cAAf,SACGW,EAAKG,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,CAAUP,KAAOO,EAAKP,KAAMC,KAAQM,EAAKN,kBCJ/CO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b57ee3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({buttonText, isSecondary,}) => {\r\n\r\n  let buttonStyles = \"button\";\r\n\r\n  if (isSecondary === true) {\r\n    buttonStyles += \" button--secondary\";\r\n  } else {\r\n    buttonStyles += \" button--primary\";\r\n  }\r\n\r\n  return (\r\n    <button className={buttonStyles}>{buttonText}</button>\r\n  )\r\n};\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport './Counter.scss';\r\nimport Button from '../../components/Button/Button';\r\nimport { useState } from 'react';\r\n\r\nconst Counter = () => {\r\n  const [counter, setCounter] = useState(0)\r\n\r\n  const handleIncrement = () => {\r\n    setCounter(counter +1)\r\n\r\n  }\r\n  const handleDecrement = () => {\r\n    if ( counter > 0 ){\r\n      setCounter(counter -1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"counter-container\">\r\n      <h4 className=\"counter\">Counter</h4>\r\n      <span className=\"result\">{counter}</span>\r\n        <div className=\"button-container\">\r\n          <div onClick={handleDecrement} >\r\n          <Button className=\"Btn\" buttonText=\"-\" isSecondary={true} />\r\n          </div>\r\n          <div onClick={handleIncrement}>\r\n          <Button className=\"Btn\" buttonText=\"+\" isSecondary={false} />\r\n          </div>\r\n          \r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n};\r\n\r\nexport default Counter\r\n","import React from 'react';\r\nimport './Employee.scss';\r\nimport Counter from '../../components/Counter/Counter';\r\n\r\nconst Employee = (props) => {\r\n  const {name, role} = props\r\n\r\n  return (\r\n    <div className=\"employee__info\">\r\n      <h3>Name: {name}</h3>\r\n      <h3>Role: {role}</h3>\r\n      <div className=\"function\">\r\n        <Counter/>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n};\r\n\r\n\r\nexport default Employee\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"title\">Ticket Tracker</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const team = [\r\n  {\r\n    id: 1,\r\n    name: \"Alima Miller\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Evelyn Rodgers\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Henley Myers\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Celyn Sanders\",\r\n    role: \"Software Developer\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Effie Mohamed\",\r\n    role: \"Software Developer\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Karam Lees\",\r\n    role: \"Senior Software Developer\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Eleanor Dowling\",\r\n    role: \"Project Manager\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Haris Grey\",\r\n    role: \"Tester\"\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Sohaib Farley\",\r\n    role: \"Tester\"\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Phillip Mitchell\",\r\n    role: \"Hard Man\"\r\n  },\r\n]\r\nexport default team;","import './App.scss';\n\nimport Employee from './components/Employee/Employee';\nimport Header from './components/Header/Header';\nimport team from './data/team';\n\nconst App = () => {\n  \n  return (\n    <div >\n      <div className=\"header\">\n        <Header/>\n      </div>\n        <section className=\"grid-container\">\n          <div className=\"profileCard\">\n            {team.map((user)=> {\n              return <Employee name ={user.name} role = {user.role}/>\n            })}\n            \n          </div>\n        </section>\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}